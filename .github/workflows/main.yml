name: Build Tauri DEB and AppImage

on:
  push:
    branches: [ main ]

jobs:
  # Your existing DEB build works fine
  build-deb:
    if: "!contains(github.event.head_commit.message, '[skip ci deb]')"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js 24.4.1
        uses: actions/setup-node@v4
        with:
          node-version: 24.4.1
      - name: Set up Rust 1.88
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88.0
      - name: Install system dependencies for Tauri
        run: |
          sudo apt update
          sudo apt install -y build-essential \
                              curl \
                              wget \
                              libssl-dev \
                              libgtk-3-dev \
                              squashfs-tools \
                              libayatana-appindicator3-dev \
                              librsvg2-dev \
                              libglib2.0-dev \
                              libsoup-3.0-dev \
                              libwebkit2gtk-4.1-dev \
                              gir1.2-webkit2-4.1 \
                              gir1.2-javascriptcore-4.1 \
                              libwebkit2gtk-4.1-0 \
                              libjavascriptcoregtk-4.1-0
      - name: Install frontend dependencies
        run: npm ci
      - name: Build Tauri app (DEB only)
        run: npm run tauri build -- --bundles deb
      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: Postchild-deb
          path: src-tauri/target/release/bundle/deb/*.deb

  # Build portable binary for other distros
  build-portable:
    if: "!contains(github.event.head_commit.message, '[skip ci portable]')"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential \
                              libssl-dev \
                              libgtk-3-dev \
                              libwebkit2gtk-4.1-dev \
                              libayatana-appindicator3-dev \
                              librsvg2-dev \
                              patchelf
      - name: Install frontend dependencies
        run: npm ci
      
      - name: Build release binary
        run: |
          npm run build
          cd src-tauri
          cargo build --release
          cd ..
      
      - name: Create portable distribution
        run: |
          # Create distribution directory
          mkdir -p dist/postchild-linux-x64
          
          # Copy binary
          cp src-tauri/target/release/postchild-app dist/postchild-linux-x64/ || \
          cp src-tauri/target/release/postchild dist/postchild-linux-x64/postchild-app
          
          # Make it executable
          chmod +x dist/postchild-linux-x64/postchild-app
          
          # Create README
          cat > dist/postchild-linux-x64/README.md << 'EOF'
          # Postchild - Portable Linux Version
          
          ## Requirements
          This binary requires the following packages to be installed:
          
          ### Ubuntu/Debian:
          ```bash
          sudo apt install libwebkit2gtk-4.1-0 libgtk-3-0 libayatana-appindicator3-1
          ```
          
          ### Fedora:
          ```bash
          sudo dnf install webkit2gtk4.1 gtk3 libappindicator-gtk3
          ```
          
          ### Arch:
          ```bash
          sudo pacman -S webkit2gtk gtk3 libappindicator-gtk3
          ```
          
          ## Running
          ```bash
          chmod +x postchild-app
          ./postchild-app
          ```
          
          ## Troubleshooting
          If you get library errors, run:
          ```bash
          ldd ./postchild-app
          ```
          This will show which libraries are missing.
          EOF
          
          # Create simple launch script
          cat > dist/postchild-linux-x64/postchild.sh << 'EOF'
          #!/bin/bash
          SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
          "$SCRIPT_DIR/postchild-app" "$@"
          EOF
          chmod +x dist/postchild-linux-x64/postchild.sh
          
          # Create tarball
          cd dist
          tar -czf postchild-linux-x64.tar.gz postchild-linux-x64/
          cd ..
          
          # Show what we created
          ls -la dist/
          ls -la dist/postchild-linux-x64/
      
      - name: Upload portable Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: Postchild-linux-portable
          path: dist/postchild-linux-x64.tar.gz
      
      - name: Create Release
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/postchild-linux-x64.tar.gz
            src-tauri/target/release/bundle/deb/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
