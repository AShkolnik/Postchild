name: Build Tauri DEB

on:
  push:
    branches: [ main ]
jobs:
  build-deb:
    if: "!contains(github.event.head_commit.message, '[skip ci deb]')"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js 24.4.1
        uses: actions/setup-node@v4
        with:
          node-version: 24.4.1
      - name: Set up Rust 1.88
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88.0
      - name: Install system dependencies for Tauri
        run: |
          sudo apt update
          sudo apt install -y build-essential \
                              curl \
                              wget \
                              libssl-dev \
                              libgtk-3-dev \
                              squashfs-tools \
                              libayatana-appindicator3-dev \
                              librsvg2-dev \
                              libglib2.0-dev \
                              libsoup-3.0-dev \
                              libwebkit2gtk-4.1-dev \
                              gir1.2-webkit2-4.1 \
                              gir1.2-javascriptcore-4.1 \
                              libwebkit2gtk-4.1-0 \
                              libjavascriptcoregtk-4.1-0
      - name: Install frontend dependencies
        run: npm ci
      - name: Build Tauri app (DEB only)
        run: npm run tauri build -- --bundles deb
      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: Postchild
          path: src-tauri/target/release/bundle/deb/*.deb

  # Build AppImage on Ubuntu 22.04 for compatibility
  build-appimage:
    if: "!contains(github.event.head_commit.message, '[skip ci appimage]')"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install system dependencies for Tauri
        run: |
          sudo apt update
          sudo apt install -y build-essential \
                              curl \
                              wget \
                              libssl-dev \
                              libgtk-3-dev \
                              libwebkit2gtk-4.0-dev \
                              libayatana-appindicator3-dev \
                              librsvg2-dev \
                              patchelf \
                              libfuse2 \
                              libsoup2.4-dev \
                              libjavascriptcoregtk-4.0-dev \
                              pkg-config
      
      # Create compatibility symlinks in the correct location
      - name: Create compatibility symlinks
        run: |
          # Find where webkit2gtk-4.0.pc actually is
          WEBKIT_PC=$(pkg-config --variable=pcfiledir webkit2gtk-4.0)
          echo "Found webkit .pc files in: $WEBKIT_PC"
          
          # Create symlinks in the same directory
          sudo ln -sf $WEBKIT_PC/webkit2gtk-4.0.pc $WEBKIT_PC/webkit2gtk-4.1.pc
          sudo ln -sf $WEBKIT_PC/javascriptcoregtk-4.0.pc $WEBKIT_PC/javascriptcoregtk-4.1.pc
          
          # Verify symlinks were created
          ls -la $WEBKIT_PC/webkit2gtk-4.1.pc
          ls -la $WEBKIT_PC/javascriptcoregtk-4.1.pc
          
          # For libsoup3, we'll use a different approach
          # Create a fake libsoup-3.0.pc that points to libsoup-2.4
          cat << EOF | sudo tee $WEBKIT_PC/libsoup-3.0.pc
          Name: libsoup-3.0
          Description: Compatibility wrapper for libsoup-2.4
          Version: 3.0
          Requires: libsoup-2.4
          Cflags: 
          Libs: 
          EOF
          
      - name: Install frontend dependencies
        run: npm ci
      
      - name: Build Tauri app (AppImage only)
        run: npm run tauri build -- --bundles appimage
      
      - name: Make AppImage executable
        run: chmod +x src-tauri/target/release/bundle/appimage/*.AppImage
      
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: Postchild
          path: src-tauri/target/release/bundle/appimage/*.AppImage
