name: Build Tauri DEB

on:
  push:
    branches: [ main ]
jobs:
  build-deb:
    if: "!contains(github.event.head_commit.message, '[skip ci deb]')"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js 24.4.1
        uses: actions/setup-node@v4
        with:
          node-version: 24.4.1
      - name: Set up Rust 1.88
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88.0
      - name: Install system dependencies for Tauri
        run: |
          sudo apt update
          sudo apt install -y build-essential \
                              curl \
                              wget \
                              libssl-dev \
                              libgtk-3-dev \
                              squashfs-tools \
                              libayatana-appindicator3-dev \
                              librsvg2-dev \
                              libglib2.0-dev \
                              libsoup-3.0-dev \
                              libwebkit2gtk-4.1-dev \
                              gir1.2-webkit2-4.1 \
                              gir1.2-javascriptcore-4.1 \
                              libwebkit2gtk-4.1-0 \
                              libjavascriptcoregtk-4.1-0
      - name: Install frontend dependencies
        run: npm ci
      - name: Build Tauri app (DEB only)
        run: npm run tauri build -- --bundles deb
      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: Postchild
          path: src-tauri/target/release/bundle/deb/*.deb

  # Build AppImage on Ubuntu 22.04 for compatibility
  build-appimage:
    if: "!contains(github.event.head_commit.message, '[skip ci appimage]')"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install system dependencies for Tauri
        run: |
          sudo apt update
          sudo apt install -y build-essential \
                              curl \
                              wget \
                              libssl-dev \
                              libgtk-3-dev \
                              libwebkit2gtk-4.0-dev \
                              libayatana-appindicator3-dev \
                              librsvg2-dev \
                              patchelf \
                              libfuse2 \
                              libsoup2.4-dev \
                              libjavascriptcoregtk-4.0-dev
      
      # Create symlinks to make the build system find the libraries
      - name: Create compatibility symlinks
        run: |
          # Find where .pc files are located
          PC_PATH=$(pkg-config --variable pc_path pkg-config | cut -d: -f1)
          
          # Create symlinks for the build system
          sudo ln -sf $PC_PATH/webkit2gtk-4.0.pc $PC_PATH/webkit2gtk-4.1.pc
          sudo ln -sf $PC_PATH/javascriptcoregtk-4.0.pc $PC_PATH/javascriptcoregtk-4.1.pc
          
          # For libsoup3, we need to handle it differently
          echo "Checking for libsoup..."
          pkg-config --exists libsoup-2.4 && echo "libsoup-2.4 found"
          
      - name: Install frontend dependencies
        run: npm ci
      
      - name: Build Tauri app (AppImage only)
        env:
          # Force the build to use webkit 4.0
          WEBKIT_DISABLE_COMPOSITING_MODE: 1
        run: npm run tauri build -- --bundles appimage
      
      - name: Make AppImage executable
        run: chmod +x src-tauri/target/release/bundle/appimage/*.AppImage
      
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: Postchild
          path: src-tauri/target/release/bundle/appimage/*.AppImage
